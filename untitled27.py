# -*- coding: utf-8 -*-
"""Untitled27.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y_rYPdQotuIHrZaXiJVAqxyspnzXhC6A
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPRegressor
from sklearn.metrics import mean_squared_error

df = pd.read_csv('Social_Network_Ads.csv')
x = df[["Age","EstimatedSalary"]]
y = df["Purchased"]
print(x.shape)
print(y.shape)

x = np.random.rand(100,1)*10
y = 2*x+5+np.random.randn(100,1)


plt.figure(figsize=(8,6))
plt.scatter(x,y)
plt.xlabel("X")
plt.ylabel("y")
plt.show()

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)

print(f"Traning data shape:{x_train.shape}")
print(f"Testing data shape:{x_test.shape}")

mlp_reg = MLPRegressor(
    hidden_layer_sizes = (20,5),
    activation = 'relu',
    solver = 'adam',
    max_iter=800,
    random_state=42
)
mlp_reg.fit(x_train,y_train)

y_pred = mlp_reg.predict(x_test)

mse = mean_squared_error(y_test,y_pred)
print(f"Mean Squared Error on Test Data:{mse:4f}")

score = mlp_reg.score(x_test,y_test)
print(f"R^2 Score on Test Data:{score:4f}")

plt.figure(figsize=(8,6))
plt.scatter(x_test,y_test,color='blue',label="Actual Data")
plt.scatter(x_test,y_pred,color='red',label="Model Prediction")
plt.xlabel("X")
plt.ylabel("y")
plt.legend()
plt.show()

